{
	"info": {
		"_postman_id": "919f0ff0-df7e-4a63-acc9-cc17bc3d4182",
		"name": "Koulutus training programs API",
		"description": "Koulutus (meaning education in Finnish) is an api to manage training programs.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "program",
			"item": [
				{
					"name": "Create a new training program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4180b7ff-829c-46f4-b5dd-453d5afa5145",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"name is correct\", function () {",
									"     pm.expect(pm.response.json().name).to.equals(\"Cuisine coréenne\");",
									"});",
									"",
									"pm.test(\"richDescription is correct\", function () {",
									"     pm.expect(pm.response.json().richDescription).to.equals(\"Le Pays du matin calme se situe à la confluence entre la Chine et le Japon. Dans ce contexte spécifique, la cuisine coréenne, si elle semble plonger ses racines dans les traditions culinaires de ses voisins...\");",
									"});",
									"",
									"pm.test(\"field is correct\", function () {",
									"     pm.expect(pm.response.json().field).to.equals(\"Gatronomie\");",
									"});",
									"",
									"pm.test(\"price is correct\", function () {",
									"     pm.expect(pm.response.json().price).to.equals(150);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Cuisine coréenne\",\r\n  \"richDescription\": \"Le Pays du matin calme se situe à la confluence entre la Chine et le Japon. Dans ce contexte spécifique, la cuisine coréenne, si elle semble plonger ses racines dans les traditions culinaires de ses voisins...\",\r\n  \"field\": \"Gatronomie\",\r\n  \"price\": 150\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/program",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"program"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"richDescription\": \"<string>\",\n    \"field\": \"<string>\",\n    \"price\": \"<string>\",\n    \"id\": \"<long>\",\n    \"courses\": [\n        {\n            \"id\": \"<long>\",\n            \"quarter\": \"<integer>\",\n            \"year\": \"<integer>\",\n            \"maxNumberOfParticipants\": \"<integer>\",\n            \"status\": \"<string>\",\n            \"sessions\": [\n                {\n                    \"id\": \"<long>\",\n                    \"startDateTime\": \"<dateTime>\",\n                    \"endDateTime\": \"<dateTime>\",\n                    \"price\": \"<double>\",\n                    \"room\": \"<string>\"\n                },\n                {\n                    \"id\": \"<long>\",\n                    \"startDateTime\": \"<dateTime>\",\n                    \"endDateTime\": \"<dateTime>\",\n                    \"price\": \"<double>\",\n                    \"room\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"id\": \"<long>\",\n            \"quarter\": \"<integer>\",\n            \"year\": \"<integer>\",\n            \"maxNumberOfParticipants\": \"<integer>\",\n            \"status\": \"<string>\",\n            \"sessions\": [\n                {\n                    \"id\": \"<long>\",\n                    \"startDateTime\": \"<dateTime>\",\n                    \"endDateTime\": \"<dateTime>\",\n                    \"price\": \"<double>\",\n                    \"room\": \"<string>\"\n                },\n                {\n                    \"id\": \"<long>\",\n                    \"startDateTime\": \"<dateTime>\",\n                    \"endDateTime\": \"<dateTime>\",\n                    \"price\": \"<double>\",\n                    \"room\": \"<string>\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/program",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"program"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"richDescription\": \"<string>\",\n \"field\": \"<string>\",\n \"price\": \"<string>\",\n \"id\": \"<long>\",\n \"courses\": [\n  {\n   \"id\": \"<long>\",\n   \"quarter\": \"<integer>\",\n   \"year\": \"<integer>\",\n   \"maxNumberOfParticipants\": \"<integer>\",\n   \"status\": \"<string>\",\n   \"sessions\": [\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    },\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    }\n   ]\n  },\n  {\n   \"id\": \"<long>\",\n   \"quarter\": \"<integer>\",\n   \"year\": \"<integer>\",\n   \"maxNumberOfParticipants\": \"<integer>\",\n   \"status\": \"<string>\",\n   \"sessions\": [\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    },\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    }\n   ]\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List all training programs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "16ec3826-cc53-4a30-90cf-a9a039ffcedd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"name is correct\", function () {",
									"     pm.expect(pm.response.json()[0].name).to.equals(\"Cuisine coréenne\");",
									"});",
									"",
									"pm.test(\"richDescription is correct\", function () {",
									"     pm.expect(pm.response.json()[0].richDescription).to.equals(\"Le Pays du matin calme se situe à la confluence entre la Chine et le Japon. Dans ce contexte spécifique, la cuisine coréenne, si elle semble plonger ses racines dans les traditions culinaires de ses voisins...\");",
									"});",
									"",
									"pm.test(\"field is correct\", function () {",
									"     pm.expect(pm.response.json()[0].field).to.equals(\"Gatronomie\");",
									"});",
									"",
									"pm.test(\"price is correct\", function () {",
									"     pm.expect(pm.response.json()[0].price).to.equals(150);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/program",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"program"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/program",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"program"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"<string>\",\n  \"richDescription\": \"<string>\",\n  \"field\": \"<string>\",\n  \"id\": \"<long>\",\n  \"courses\": [\n   {\n    \"id\": \"<long>\",\n    \"quarter\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"maxNumberOfParticipants\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"sessions\": [\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     },\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     }\n    ]\n   },\n   {\n    \"id\": \"<long>\",\n    \"quarter\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"maxNumberOfParticipants\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"sessions\": [\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     },\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     }\n    ]\n   }\n  ]\n },\n {\n  \"name\": \"<string>\",\n  \"richDescription\": \"<string>\",\n  \"field\": \"<string>\",\n  \"id\": \"<long>\",\n  \"courses\": [\n   {\n    \"id\": \"<long>\",\n    \"quarter\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"maxNumberOfParticipants\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"sessions\": [\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     },\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     }\n    ]\n   },\n   {\n    \"id\": \"<long>\",\n    \"quarter\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"maxNumberOfParticipants\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"sessions\": [\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     },\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     }\n    ]\n   }\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "View the details of a training program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5c46184-ed51-4d11-b7ff-689fa991e158",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"name is correct\", function () {",
									"     pm.expect(pm.response.json().name).to.equals(\"Cuisine coréenne\");",
									"});",
									"",
									"pm.test(\"richDescription is correct\", function () {",
									"     pm.expect(pm.response.json().richDescription).to.equals(\"Le Pays du matin calme se situe à la confluence entre la Chine et le Japon. Dans ce contexte spécifique, la cuisine coréenne, si elle semble plonger ses racines dans les traditions culinaires de ses voisins...\");",
									"});",
									"",
									"pm.test(\"field is correct\", function () {",
									"     pm.expect(pm.response.json().field).to.equals(\"Gatronomie\");",
									"});",
									"",
									"pm.test(\"price is correct\", function () {",
									"     pm.expect(pm.response.json().price).to.equals(150);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/program/:programId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"program",
								":programId"
							],
							"variable": [
								{
									"key": "programId",
									"value": "1",
									"description": "id of the program to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/program/<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"program",
										"<integer>"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"richDescription\": \"<string>\",\n \"field\": \"<string>\",\n \"price\": \"<string>\",\n \"id\": \"<long>\",\n \"courses\": [\n  {\n   \"id\": \"<long>\",\n   \"quarter\": \"<integer>\",\n   \"year\": \"<integer>\",\n   \"maxNumberOfParticipants\": \"<integer>\",\n   \"status\": \"<string>\",\n   \"sessions\": [\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    },\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    }\n   ]\n  },\n  {\n   \"id\": \"<long>\",\n   \"quarter\": \"<integer>\",\n   \"year\": \"<integer>\",\n   \"maxNumberOfParticipants\": \"<integer>\",\n   \"status\": \"<string>\",\n   \"sessions\": [\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    },\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    }\n   ]\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "update an existing training program. Returns the updated training program.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d0e0bb3-64b8-4301-8321-7023dd5cd8fb",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"name is correct\", function () {",
									"     pm.expect(pm.response.json().name).to.equals(\"Cuisine coréenneUpdate\");",
									"});",
									"",
									"pm.test(\"richDescription is correct\", function () {",
									"     pm.expect(pm.response.json().richDescription).to.equals(\"Le Pays du matin calme se situe à la confluence entre la Chine et le Japon. Dans ce contexte spécifique, la cuisine coréenne, si elle semble plonger ses racines dans les traditions culinaires de ses voisins...Update\");",
									"});",
									"",
									"pm.test(\"field is correct\", function () {",
									"     pm.expect(pm.response.json().field).to.equals(\"GatronomieUpdate\");",
									"});",
									"",
									"pm.test(\"price is correct\", function () {",
									"     pm.expect(pm.response.json().price).to.equals(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Cuisine coréenneUpdate\",\r\n  \"richDescription\": \"Le Pays du matin calme se situe à la confluence entre la Chine et le Japon. Dans ce contexte spécifique, la cuisine coréenne, si elle semble plonger ses racines dans les traditions culinaires de ses voisins...Update\",\r\n  \"field\": \"GatronomieUpdate\",\r\n  \"price\": 200\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/program/:programId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"program",
								":programId"
							],
							"variable": [
								{
									"key": "programId",
									"value": "1",
									"description": "id of the program to update"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"richDescription\": \"<string>\",\n    \"field\": \"<string>\",\n    \"price\": \"<string>\",\n    \"id\": \"<long>\",\n    \"courses\": [\n        {\n            \"id\": \"<long>\",\n            \"quarter\": \"<integer>\",\n            \"year\": \"<integer>\",\n            \"maxNumberOfParticipants\": \"<integer>\",\n            \"status\": \"<string>\",\n            \"sessions\": [\n                {\n                    \"id\": \"<long>\",\n                    \"startDateTime\": \"<dateTime>\",\n                    \"endDateTime\": \"<dateTime>\",\n                    \"price\": \"<double>\",\n                    \"room\": \"<string>\"\n                },\n                {\n                    \"id\": \"<long>\",\n                    \"startDateTime\": \"<dateTime>\",\n                    \"endDateTime\": \"<dateTime>\",\n                    \"price\": \"<double>\",\n                    \"room\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"id\": \"<long>\",\n            \"quarter\": \"<integer>\",\n            \"year\": \"<integer>\",\n            \"maxNumberOfParticipants\": \"<integer>\",\n            \"status\": \"<string>\",\n            \"sessions\": [\n                {\n                    \"id\": \"<long>\",\n                    \"startDateTime\": \"<dateTime>\",\n                    \"endDateTime\": \"<dateTime>\",\n                    \"price\": \"<double>\",\n                    \"room\": \"<string>\"\n                },\n                {\n                    \"id\": \"<long>\",\n                    \"startDateTime\": \"<dateTime>\",\n                    \"endDateTime\": \"<dateTime>\",\n                    \"price\": \"<double>\",\n                    \"room\": \"<string>\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/program/<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"program",
										"<integer>"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"richDescription\": \"<string>\",\n \"field\": \"<string>\",\n \"price\": \"<string>\",\n \"id\": \"<long>\",\n \"courses\": [\n  {\n   \"id\": \"<long>\",\n   \"quarter\": \"<integer>\",\n   \"year\": \"<integer>\",\n   \"maxNumberOfParticipants\": \"<integer>\",\n   \"status\": \"<string>\",\n   \"sessions\": [\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    },\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    }\n   ]\n  },\n  {\n   \"id\": \"<long>\",\n   \"quarter\": \"<integer>\",\n   \"year\": \"<integer>\",\n   \"maxNumberOfParticipants\": \"<integer>\",\n   \"status\": \"<string>\",\n   \"sessions\": [\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    },\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    }\n   ]\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Delete an existing training program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "718e41dd-c2b0-4f7e-89aa-7cce2c1f1b0d",
								"exec": [
									"pm.test('Check status code', () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204])\r",
									"})\r",
									"\r",
									"pm.sendRequest(pm.variables.get(\"baseUrl\") + \"/program\", function (err, res) {\r",
									"  if (err) { console.log(err); }    \r",
									"  pm.test('array is empty', function () {\r",
									"    pm.expect(res.json().length).to.equals(0);\r",
									"  });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/program/:programId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"program",
								":programId"
							],
							"variable": [
								{
									"key": "programId",
									"value": "1",
									"description": "id of the program to delete"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/program/<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"program",
										"<integer>"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "course",
			"item": [
				{
					"name": "Add a new course to an existing program",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d14f710c-6cec-4541-9fa4-ddb1e8ab062c",
								"exec": [
									"pm.sendRequest({\r",
									"    url: pm.variables.get(\"baseUrl\") + \"/program\",\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"      'Content-Type': 'application/json'\r",
									"  },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({  'name':'Cuisine coréenne',\r",
									"  'richDescription': 'Le Pays du matin calme se situe à la confluence entre la Chine et le Japon. Dans ce contexte spécifique, la cuisine coréenne, si elle semble plonger ses racines dans les traditions culinaires de ses voisins...',\r",
									"  'field': 'Gatronomie',\r",
									"  'price': 150})\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    console.log(\"res: \" + res);\r",
									"    console.log(\"err: \" + err);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ee3e2bb0-eab2-4217-b803-bd2ee2399277",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"quarter is correct\", function () {",
									"     pm.expect(pm.response.json().quarter).to.equals(2);",
									"});",
									"",
									"pm.test(\"year is correct\", function () {",
									"     pm.expect(pm.response.json().year).to.equals(2018);",
									"});",
									"",
									"pm.test(\"maxNumberOfParticipants is correct\", function () {",
									"     pm.expect(pm.response.json().maxNumberOfParticipants).to.equals(5);",
									"});",
									"",
									"pm.test(\"status is correct\", function () {",
									"     pm.expect(pm.response.json().status).to.equals(\"OPEN\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"quarter\": \"2\",\r\n  \"year\": 2018,\r\n  \"maxNumberOfParticipants\": 5\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/program/:programId/course",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"program",
								":programId",
								"course"
							],
							"variable": [
								{
									"key": "programId",
									"value": "2",
									"description": "id of the program in which the course have to be added"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"quarter\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"maxNumberOfParticipants\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"sessions\": [\n        {\n            \"id\": \"<long>\",\n            \"startDateTime\": \"<dateTime>\",\n            \"endDateTime\": \"<dateTime>\",\n            \"price\": \"<double>\",\n            \"room\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"startDateTime\": \"<dateTime>\",\n            \"endDateTime\": \"<dateTime>\",\n            \"price\": \"<double>\",\n            \"room\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/program/<integer>/course",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"program",
										"<integer>",
										"course"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<long>\",\n \"quarter\": \"<integer>\",\n \"year\": \"<integer>\",\n \"maxNumberOfParticipants\": \"<integer>\",\n \"status\": \"<string>\",\n \"sessions\": [\n  {\n   \"id\": \"<long>\",\n   \"startDateTime\": \"<dateTime>\",\n   \"endDateTime\": \"<dateTime>\",\n   \"price\": \"<double>\",\n   \"room\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"startDateTime\": \"<dateTime>\",\n   \"endDateTime\": \"<dateTime>\",\n   \"price\": \"<double>\",\n   \"room\": \"<string>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get all course for a given program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ff72026-c131-4b39-a33a-7580c8ce1034",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"quarter is correct\", function () {",
									"     pm.expect(pm.response.json()[0].quarter).to.equals(2);",
									"});",
									"",
									"pm.test(\"year is correct\", function () {",
									"     pm.expect(pm.response.json()[0].year).to.equals(2018);",
									"});",
									"",
									"pm.test(\"maxNumberOfParticipants is correct\", function () {",
									"     pm.expect(pm.response.json()[0].maxNumberOfParticipants).to.equals(5);",
									"});",
									"",
									"pm.test(\"status is correct\", function () {",
									"     pm.expect(pm.response.json()[0].status).to.equals(\"OPEN\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/program/:programId/course",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"program",
								":programId",
								"course"
							],
							"variable": [
								{
									"key": "programId",
									"value": "2",
									"description": "id of the program"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/program/<integer>/course",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"program",
										"<integer>",
										"course"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<long>\",\n  \"quarter\": \"<integer>\",\n  \"year\": \"<integer>\",\n  \"maxNumberOfParticipants\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"sessions\": [\n   {\n    \"id\": \"<long>\",\n    \"startDateTime\": \"<dateTime>\",\n    \"endDateTime\": \"<dateTime>\",\n    \"price\": \"<double>\",\n    \"room\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"startDateTime\": \"<dateTime>\",\n    \"endDateTime\": \"<dateTime>\",\n    \"price\": \"<double>\",\n    \"room\": \"<string>\"\n   }\n  ]\n },\n {\n  \"id\": \"<long>\",\n  \"quarter\": \"<integer>\",\n  \"year\": \"<integer>\",\n  \"maxNumberOfParticipants\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"sessions\": [\n   {\n    \"id\": \"<long>\",\n    \"startDateTime\": \"<dateTime>\",\n    \"endDateTime\": \"<dateTime>\",\n    \"price\": \"<double>\",\n    \"room\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"startDateTime\": \"<dateTime>\",\n    \"endDateTime\": \"<dateTime>\",\n    \"price\": \"<double>\",\n    \"room\": \"<string>\"\n   }\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "Detail of a course for a given program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0bd46766-46f4-40d3-8a66-380432e067f3",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"quarter is correct\", function () {",
									"     pm.expect(pm.response.json().quarter).to.equals(2);",
									"});",
									"",
									"pm.test(\"year is correct\", function () {",
									"     pm.expect(pm.response.json().year).to.equals(2018);",
									"});",
									"",
									"pm.test(\"maxNumberOfParticipants is correct\", function () {",
									"     pm.expect(pm.response.json().maxNumberOfParticipants).to.equals(5);",
									"});",
									"",
									"pm.test(\"status is correct\", function () {",
									"     pm.expect(pm.response.json().status).to.equals(\"OPEN\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/program/:programId/course/:courseId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"program",
								":programId",
								"course",
								":courseId"
							],
							"variable": [
								{
									"key": "programId",
									"value": "2",
									"description": "id of the program"
								},
								{
									"key": "courseId",
									"value": "1",
									"description": "id of the course that have to be getted"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/program/<integer>/course/<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"program",
										"<integer>",
										"course",
										"<integer>"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<long>\",\n \"quarter\": \"<integer>\",\n \"year\": \"<integer>\",\n \"maxNumberOfParticipants\": \"<integer>\",\n \"status\": \"<string>\",\n \"sessions\": [\n  {\n   \"id\": \"<long>\",\n   \"startDateTime\": \"<dateTime>\",\n   \"endDateTime\": \"<dateTime>\",\n   \"price\": \"<double>\",\n   \"room\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"startDateTime\": \"<dateTime>\",\n   \"endDateTime\": \"<dateTime>\",\n   \"price\": \"<double>\",\n   \"room\": \"<string>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Update an existing course. Returns the updated course",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d6a0bfd-ad2e-4278-a04e-5d1efd26fe31",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"quarter is correct\", function () {",
									"     pm.expect(pm.response.json().quarter).to.equals(3);",
									"});",
									"",
									"pm.test(\"year is correct\", function () {",
									"     pm.expect(pm.response.json().year).to.equals(2019);",
									"});",
									"",
									"pm.test(\"maxNumberOfParticipants is correct\", function () {",
									"     pm.expect(pm.response.json().maxNumberOfParticipants).to.equals(10);",
									"});",
									"",
									"pm.test(\"status is correct\", function () {",
									"     pm.expect(pm.response.json().status).to.equals(\"OPEN\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"quarter\": \"3\",\r\n  \"year\": 2019,\r\n  \"maxNumberOfParticipants\": 10\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/program/:programId/course/:courseId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"program",
								":programId",
								"course",
								":courseId"
							],
							"variable": [
								{
									"key": "programId",
									"value": "2",
									"description": "id of the program"
								},
								{
									"key": "courseId",
									"value": "1",
									"description": "id of the course to update"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"quarter\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"maxNumberOfParticipants\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"sessions\": [\n        {\n            \"id\": \"<long>\",\n            \"startDateTime\": \"<dateTime>\",\n            \"endDateTime\": \"<dateTime>\",\n            \"price\": \"<double>\",\n            \"room\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"startDateTime\": \"<dateTime>\",\n            \"endDateTime\": \"<dateTime>\",\n            \"price\": \"<double>\",\n            \"room\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/program/<integer>/course/<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"program",
										"<integer>",
										"course",
										"<integer>"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<long>\",\n \"quarter\": \"<integer>\",\n \"year\": \"<integer>\",\n \"maxNumberOfParticipants\": \"<integer>\",\n \"status\": \"<string>\",\n \"sessions\": [\n  {\n   \"id\": \"<long>\",\n   \"startDateTime\": \"<dateTime>\",\n   \"endDateTime\": \"<dateTime>\",\n   \"price\": \"<double>\",\n   \"room\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"startDateTime\": \"<dateTime>\",\n   \"endDateTime\": \"<dateTime>\",\n   \"price\": \"<double>\",\n   \"room\": \"<string>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete a course for a given program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2b08f3c-84be-496e-91b1-e37901589f03",
								"exec": [
									"pm.test('Check status code', () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204])\r",
									"})\r",
									"\r",
									"\r",
									"pm.sendRequest(pm.variables.get(\"baseUrl\") + \"/program/2/course\", function (err, res) {\r",
									"  if (err) { console.log(err); }    \r",
									"  pm.test('array is empty', function () {\r",
									"    pm.expect(res.json().length).to.equals(0);\r",
									"  });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/program/:programId/course/:courseId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"program",
								":programId",
								"course",
								":courseId"
							],
							"variable": [
								{
									"key": "programId",
									"value": "2",
									"description": "id of the program"
								},
								{
									"key": "courseId",
									"value": "1",
									"description": "id of the course that have to be deleted"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/program/<integer>/course/<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"program",
										"<integer>",
										"course",
										"<integer>"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "session",
			"item": [
				{
					"name": "Create new session(s) for a given course and program",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f3b7473e-178e-4e33-b529-486172e47f0c",
								"exec": [
									"pm.sendRequest({\r",
									"    url: pm.variables.get(\"baseUrl\") + \"/program/2/course\",\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"      'Content-Type': 'application/json'\r",
									"  },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"  \"quarter\": \"2\",\r",
									"  \"year\": 2018,\r",
									"  \"maxNumberOfParticipants\": 5\r",
									"})\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    console.log(\"res: \" + res);\r",
									"    console.log(\"err: \" + err);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6e972845-bd7b-44b0-8294-b7ef5b7e24b8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"startDateTime is correct\", function () {",
									"    pm.expect(pm.response.json()[0].startDateTime).to.equals(\"20.10.2018 17:00\");",
									"    pm.expect(pm.response.json()[1].startDateTime).to.equals(\"21.10.2018 20:00\");",
									"",
									"});",
									"",
									"pm.test(\"endDateTime is correct\", function () {",
									"    pm.expect(pm.response.json()[0].endDateTime).to.equals(\"20.10.2018 19:00\");",
									"    pm.expect(pm.response.json()[1].endDateTime).to.equals(\"21.10.2018 22:00\");",
									"});",
									"",
									"pm.test(\"price is correct\", function () {",
									"    pm.expect(pm.response.json()[0].price).to.equals(45);",
									"    pm.expect(pm.response.json()[1].price).to.equals(100);",
									"});",
									"",
									"pm.test(\"room is correct\", function () {",
									"    pm.expect(pm.response.json()[0].room).to.equals(\"B14\");",
									"    pm.expect(pm.response.json()[1].room).to.equals(\"A20\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"startDateTime\": \"20.10.2018 17:00\",\r\n    \"endDateTime\": \"20.10.2018 19:00\",\r\n    \"price\": 45,\r\n    \"room\": \"B14\"\r\n  },\r\n  {\r\n    \"startDateTime\": \"21.10.2018 20:00\",\r\n    \"endDateTime\": \"21.10.2018 22:00\",\r\n    \"price\": 100,\r\n    \"room\": \"A20\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/program/:programId/course/:courseId/session",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"program",
								":programId",
								"course",
								":courseId",
								"session"
							],
							"variable": [
								{
									"key": "programId",
									"value": "2",
									"description": "id of the program"
								},
								{
									"key": "courseId",
									"value": "2",
									"description": "id of the course"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": \"<long>\",\n        \"startDateTime\": \"<dateTime>\",\n        \"endDateTime\": \"<dateTime>\",\n        \"price\": \"<double>\",\n        \"room\": \"<string>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"startDateTime\": \"<dateTime>\",\n        \"endDateTime\": \"<dateTime>\",\n        \"price\": \"<double>\",\n        \"room\": \"<string>\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/program/<integer>/course/<integer>/session",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"program",
										"<integer>",
										"course",
										"<integer>",
										"session"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<long>\",\n  \"startDateTime\": \"<dateTime>\",\n  \"endDateTime\": \"<dateTime>\",\n  \"price\": \"<double>\",\n  \"room\": \"<string>\"\n },\n {\n  \"id\": \"<long>\",\n  \"startDateTime\": \"<dateTime>\",\n  \"endDateTime\": \"<dateTime>\",\n  \"price\": \"<double>\",\n  \"room\": \"<string>\"\n }\n]"
						}
					]
				},
				{
					"name": "List all sessions for a given course and program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "28b811d7-a93c-4fbb-8721-c5dd9a324149",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"startDateTime is correct\", function () {",
									"    pm.expect(pm.response.json()[0].startDateTime).to.equals(\"20.10.2018 17:00\");",
									"    pm.expect(pm.response.json()[1].startDateTime).to.equals(\"21.10.2018 20:00\");",
									"",
									"});",
									"",
									"pm.test(\"endDateTime is correct\", function () {",
									"    pm.expect(pm.response.json()[0].endDateTime).to.equals(\"20.10.2018 19:00\");",
									"    pm.expect(pm.response.json()[1].endDateTime).to.equals(\"21.10.2018 22:00\");",
									"});",
									"",
									"pm.test(\"price is correct\", function () {",
									"    pm.expect(pm.response.json()[0].price).to.equals(45);",
									"    pm.expect(pm.response.json()[1].price).to.equals(100);",
									"});",
									"",
									"pm.test(\"room is correct\", function () {",
									"    pm.expect(pm.response.json()[0].room).to.equals(\"B14\");",
									"    pm.expect(pm.response.json()[1].room).to.equals(\"A20\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/program/:programId/course/:courseId/session",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"program",
								":programId",
								"course",
								":courseId",
								"session"
							],
							"variable": [
								{
									"key": "programId",
									"value": "2",
									"description": "id of the program"
								},
								{
									"key": "courseId",
									"value": "2",
									"description": "id of the course"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/program/<integer>/course/<integer>/session",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"program",
										"<integer>",
										"course",
										"<integer>",
										"session"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<long>\",\n  \"startDateTime\": \"<dateTime>\",\n  \"endDateTime\": \"<dateTime>\",\n  \"price\": \"<double>\",\n  \"room\": \"<string>\"\n },\n {\n  \"id\": \"<long>\",\n  \"startDateTime\": \"<dateTime>\",\n  \"endDateTime\": \"<dateTime>\",\n  \"price\": \"<double>\",\n  \"room\": \"<string>\"\n }\n]"
						}
					]
				},
				{
					"name": "Details of a session for a given course and program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "33261233-ad28-4945-9523-d580154b5c52",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"startDateTime is correct\", function () {",
									"     pm.expect(pm.response.json().startDateTime).to.equals(\"20.10.2018 17:00\");",
									"});",
									"",
									"pm.test(\"endDateTime is correct\", function () {",
									"     pm.expect(pm.response.json().endDateTime).to.equals(\"20.10.2018 19:00\");",
									"});",
									"",
									"pm.test(\"price is correct\", function () {",
									"     pm.expect(pm.response.json().price).to.equals(45);",
									"});",
									"",
									"pm.test(\"room is correct\", function () {",
									"     pm.expect(pm.response.json().room).to.equals(\"B14\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/program/:programId/course/:courseId/session/:sessionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"program",
								":programId",
								"course",
								":courseId",
								"session",
								":sessionId"
							],
							"variable": [
								{
									"key": "programId",
									"value": "2",
									"description": "id of the program"
								},
								{
									"key": "courseId",
									"value": "2",
									"description": "id of the course"
								},
								{
									"key": "sessionId",
									"value": "1",
									"description": "id of the session"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/program/<integer>/course/<integer>/session/<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"program",
										"<integer>",
										"course",
										"<integer>",
										"session",
										"<integer>"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<long>\",\n \"startDateTime\": \"<dateTime>\",\n \"endDateTime\": \"<dateTime>\",\n \"price\": \"<double>\",\n \"room\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Modify an existing session. Returns the updated session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5ccf05cc-2053-42d3-b831-ce354dd12e8c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"startDateTime is correct\", function () {",
									"     pm.expect(pm.response.json().startDateTime).to.equals(\"21.10.2018 20:00\");",
									"});",
									"",
									"pm.test(\"endDateTime is correct\", function () {",
									"     pm.expect(pm.response.json().endDateTime).to.equals(\"22.10.2018 22:00\");",
									"});",
									"",
									"pm.test(\"price is correct\", function () {",
									"     pm.expect(pm.response.json().price).to.equals(50);",
									"});",
									"",
									"pm.test(\"room is correct\", function () {",
									"     pm.expect(pm.response.json().room).to.equals(\"A20Update\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"startDateTime\": \"21.10.2018 20:00\",\r\n  \"endDateTime\": \"22.10.2018 22:00\",\r\n  \"price\": 50,\r\n  \"room\": \"A20Update\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/program/:programId/course/:courseId/session/:sessionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"program",
								":programId",
								"course",
								":courseId",
								"session",
								":sessionId"
							],
							"variable": [
								{
									"key": "programId",
									"value": "2",
									"description": "id of the program"
								},
								{
									"key": "courseId",
									"value": "2",
									"description": "id of the course"
								},
								{
									"key": "sessionId",
									"value": "1",
									"description": "id of the session to update"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"startDateTime\": \"<dateTime>\",\n    \"endDateTime\": \"<dateTime>\",\n    \"price\": \"<double>\",\n    \"room\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/program/<integer>/course/<integer>/session/<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"program",
										"<integer>",
										"course",
										"<integer>",
										"session",
										"<integer>"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<long>\",\n \"startDateTime\": \"<dateTime>\",\n \"endDateTime\": \"<dateTime>\",\n \"price\": \"<double>\",\n \"room\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "delete a session by id for a given course and program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5bee3194-961b-4731-aa62-d5c956533c00",
								"exec": [
									"pm.test('Check status code', () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204])\r",
									"})\r",
									"\r",
									"\r",
									"pm.sendRequest(pm.variables.get(\"baseUrl\") + \"/program/2/course/2/session\", function (err, res) {\r",
									"  if (err) { console.log(err); }    \r",
									"  pm.test('array is empty', function () {\r",
									"    pm.expect(res.json().length).to.equals(1);\r",
									"  });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/program/:programId/course/:courseId/session/:sessionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"program",
								":programId",
								"course",
								":courseId",
								"session",
								":sessionId"
							],
							"variable": [
								{
									"key": "programId",
									"value": "2",
									"description": "id of the program"
								},
								{
									"key": "courseId",
									"value": "2",
									"description": "id of the course"
								},
								{
									"key": "sessionId",
									"value": "2",
									"description": "id of the session that have to be deleted"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/program/<integer>/course/<integer>/session/<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"program",
										"<integer>",
										"course",
										"<integer>",
										"session",
										"<integer>"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "participant",
			"item": [
				{
					"name": "Add a new Participant",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "077dc905-06ef-4cb4-a1fb-b1e6b75c3351",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"firstName is correct\", function () {",
									"     pm.expect(pm.response.json().firstName).to.equals(\"Sabrina\");",
									"});",
									"",
									"pm.test(\"lastName is correct\", function () {",
									"     pm.expect(pm.response.json().lastName).to.equals(\"Hillow\");",
									"});",
									"",
									"pm.test(\"birthdate is correct\", function () {",
									"     pm.expect(pm.response.json().birthdate).to.equals(\"15.03.1997\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"Sabrina\",\r\n  \"lastName\": \"Hillow\",\r\n  \"birthdate\": \"15.03.1997\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/participant",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"participant"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"birthdate\": \"<date>\",\n    \"courses\": [\n        {\n            \"id\": \"<long>\",\n            \"quarter\": \"<integer>\",\n            \"year\": \"<integer>\",\n            \"maxNumberOfParticipants\": \"<integer>\",\n            \"status\": \"<string>\",\n            \"sessions\": [\n                {\n                    \"id\": \"<long>\",\n                    \"startDateTime\": \"<dateTime>\",\n                    \"endDateTime\": \"<dateTime>\",\n                    \"price\": \"<double>\",\n                    \"room\": \"<string>\"\n                },\n                {\n                    \"id\": \"<long>\",\n                    \"startDateTime\": \"<dateTime>\",\n                    \"endDateTime\": \"<dateTime>\",\n                    \"price\": \"<double>\",\n                    \"room\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"id\": \"<long>\",\n            \"quarter\": \"<integer>\",\n            \"year\": \"<integer>\",\n            \"maxNumberOfParticipants\": \"<integer>\",\n            \"status\": \"<string>\",\n            \"sessions\": [\n                {\n                    \"id\": \"<long>\",\n                    \"startDateTime\": \"<dateTime>\",\n                    \"endDateTime\": \"<dateTime>\",\n                    \"price\": \"<double>\",\n                    \"room\": \"<string>\"\n                },\n                {\n                    \"id\": \"<long>\",\n                    \"startDateTime\": \"<dateTime>\",\n                    \"endDateTime\": \"<dateTime>\",\n                    \"price\": \"<double>\",\n                    \"room\": \"<string>\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/participant",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"participant"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<long>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"birthdate\": \"<date>\",\n \"courses\": [\n  {\n   \"id\": \"<long>\",\n   \"quarter\": \"<integer>\",\n   \"year\": \"<integer>\",\n   \"maxNumberOfParticipants\": \"<integer>\",\n   \"status\": \"<string>\",\n   \"sessions\": [\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    },\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    }\n   ]\n  },\n  {\n   \"id\": \"<long>\",\n   \"quarter\": \"<integer>\",\n   \"year\": \"<integer>\",\n   \"maxNumberOfParticipants\": \"<integer>\",\n   \"status\": \"<string>\",\n   \"sessions\": [\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    },\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    }\n   ]\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List all participants",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8299a201-e91f-4a3e-b67b-976b749c5a52",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"firstName is correct\", function () {",
									"     pm.expect(pm.response.json()[0].firstName).to.equals(\"Sabrina\");",
									"});",
									"",
									"pm.test(\"lastName is correct\", function () {",
									"     pm.expect(pm.response.json()[0].lastName).to.equals(\"Hillow\");",
									"});",
									"",
									"pm.test(\"birthdate is correct\", function () {",
									"     pm.expect(pm.response.json()[0].birthdate).to.equals(\"15.03.1997\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/participant",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"participant"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/participant",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"participant"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<long>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"birthdate\": \"<date>\",\n  \"courses\": [\n   {\n    \"id\": \"<long>\",\n    \"quarter\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"maxNumberOfParticipants\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"sessions\": [\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     },\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     }\n    ]\n   },\n   {\n    \"id\": \"<long>\",\n    \"quarter\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"maxNumberOfParticipants\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"sessions\": [\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     },\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     }\n    ]\n   }\n  ]\n },\n {\n  \"id\": \"<long>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"birthdate\": \"<date>\",\n  \"courses\": [\n   {\n    \"id\": \"<long>\",\n    \"quarter\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"maxNumberOfParticipants\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"sessions\": [\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     },\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     }\n    ]\n   },\n   {\n    \"id\": \"<long>\",\n    \"quarter\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"maxNumberOfParticipants\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"sessions\": [\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     },\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     }\n    ]\n   }\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "Detail of a participant",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e4153573-10f1-44ec-b3ea-a3c81ec71198",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"firstName is correct\", function () {",
									"     pm.expect(pm.response.json().firstName).to.equals(\"Sabrina\");",
									"});",
									"",
									"pm.test(\"lastName is correct\", function () {",
									"     pm.expect(pm.response.json().lastName).to.equals(\"Hillow\");",
									"});",
									"",
									"pm.test(\"birthdate is correct\", function () {",
									"     pm.expect(pm.response.json().birthdate).to.equals(\"15.03.1997\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/participant/:participantId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"participant",
								":participantId"
							],
							"variable": [
								{
									"key": "participantId",
									"value": "1",
									"description": "id of the participant that have to be getted"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/participant/<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"participant",
										"<integer>"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<long>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"birthdate\": \"<date>\",\n \"courses\": [\n  {\n   \"id\": \"<long>\",\n   \"quarter\": \"<integer>\",\n   \"year\": \"<integer>\",\n   \"maxNumberOfParticipants\": \"<integer>\",\n   \"status\": \"<string>\",\n   \"sessions\": [\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    },\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    }\n   ]\n  },\n  {\n   \"id\": \"<long>\",\n   \"quarter\": \"<integer>\",\n   \"year\": \"<integer>\",\n   \"maxNumberOfParticipants\": \"<integer>\",\n   \"status\": \"<string>\",\n   \"sessions\": [\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    },\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    }\n   ]\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Modify an existing participant",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ae76e5fb-4082-4984-9deb-71349a4310c7",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"firstName is correct\", function () {",
									"     pm.expect(pm.response.json().firstName).to.equals(\"SabrinaUpdate\");",
									"});",
									"",
									"pm.test(\"lastName is correct\", function () {",
									"     pm.expect(pm.response.json().lastName).to.equals(\"HillowUpdate\");",
									"});",
									"",
									"pm.test(\"birthdate is correct\", function () {",
									"     pm.expect(pm.response.json().birthdate).to.equals(\"01.04.1998\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"SabrinaUpdate\",\r\n  \"lastName\": \"HillowUpdate\",\r\n  \"birthdate\": \"01.04.1998\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/participant/:participantId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"participant",
								":participantId"
							],
							"variable": [
								{
									"key": "participantId",
									"value": "1",
									"description": "id of the person that have to be modified"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"birthdate\": \"<date>\",\n    \"courses\": [\n        {\n            \"id\": \"<long>\",\n            \"quarter\": \"<integer>\",\n            \"year\": \"<integer>\",\n            \"maxNumberOfParticipants\": \"<integer>\",\n            \"status\": \"<string>\",\n            \"sessions\": [\n                {\n                    \"id\": \"<long>\",\n                    \"startDateTime\": \"<dateTime>\",\n                    \"endDateTime\": \"<dateTime>\",\n                    \"price\": \"<double>\",\n                    \"room\": \"<string>\"\n                },\n                {\n                    \"id\": \"<long>\",\n                    \"startDateTime\": \"<dateTime>\",\n                    \"endDateTime\": \"<dateTime>\",\n                    \"price\": \"<double>\",\n                    \"room\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"id\": \"<long>\",\n            \"quarter\": \"<integer>\",\n            \"year\": \"<integer>\",\n            \"maxNumberOfParticipants\": \"<integer>\",\n            \"status\": \"<string>\",\n            \"sessions\": [\n                {\n                    \"id\": \"<long>\",\n                    \"startDateTime\": \"<dateTime>\",\n                    \"endDateTime\": \"<dateTime>\",\n                    \"price\": \"<double>\",\n                    \"room\": \"<string>\"\n                },\n                {\n                    \"id\": \"<long>\",\n                    \"startDateTime\": \"<dateTime>\",\n                    \"endDateTime\": \"<dateTime>\",\n                    \"price\": \"<double>\",\n                    \"room\": \"<string>\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/participant/<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"participant",
										"<integer>"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<long>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"birthdate\": \"<date>\",\n \"courses\": [\n  {\n   \"id\": \"<long>\",\n   \"quarter\": \"<integer>\",\n   \"year\": \"<integer>\",\n   \"maxNumberOfParticipants\": \"<integer>\",\n   \"status\": \"<string>\",\n   \"sessions\": [\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    },\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    }\n   ]\n  },\n  {\n   \"id\": \"<long>\",\n   \"quarter\": \"<integer>\",\n   \"year\": \"<integer>\",\n   \"maxNumberOfParticipants\": \"<integer>\",\n   \"status\": \"<string>\",\n   \"sessions\": [\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    },\n    {\n     \"id\": \"<long>\",\n     \"startDateTime\": \"<dateTime>\",\n     \"endDateTime\": \"<dateTime>\",\n     \"price\": \"<double>\",\n     \"room\": \"<string>\"\n    }\n   ]\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Register a participant to a course",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ed8e919-2ed2-457b-bc55-3194688bc9f8",
								"exec": [
									"pm.test('Check status code', () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204])\r",
									"})\r",
									"\r",
									"pm.sendRequest(pm.variables.get(\"baseUrl\") + \"/program/2/course\", function (err, res) {\r",
									"  if (err) { console.log(err); }    \r",
									"  pm.test('participant is registered in the course', function () {\r",
									"    pm.expect(res.json()[0].participants[0].id).to.equals(1);\r",
									"  });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/program/:programId/course/:courseId/participant/:participantId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"program",
								":programId",
								"course",
								":courseId",
								"participant",
								":participantId"
							],
							"variable": [
								{
									"key": "programId",
									"value": "2",
									"description": "id of the program"
								},
								{
									"key": "courseId",
									"value": "2",
									"description": "id of the course"
								},
								{
									"key": "participantId",
									"value": "1",
									"description": "id of the Participant"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/program/<integer>/course/<integer>/participant/<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"program",
										"<integer>",
										"course",
										"<integer>",
										"participant",
										"<integer>"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all courses in which a participant is registered",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "526ecad7-53a8-4ba8-afd6-b96816a91ec8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"the course is in the list\", function () {",
									"     pm.expect(pm.response.json()[0].id).to.equals(2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/participant/:participantId/summary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"participant",
								":participantId",
								"summary"
							],
							"variable": [
								{
									"key": "participantId",
									"value": "1",
									"description": "id of the participant"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/participant/<integer>/summary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"participant",
										"<integer>",
										"summary"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<long>\",\n  \"quarter\": \"<integer>\",\n  \"year\": \"<integer>\",\n  \"maxNumberOfParticipants\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"sessions\": [\n   {\n    \"id\": \"<long>\",\n    \"startDateTime\": \"<dateTime>\",\n    \"endDateTime\": \"<dateTime>\",\n    \"price\": \"<double>\",\n    \"room\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"startDateTime\": \"<dateTime>\",\n    \"endDateTime\": \"<dateTime>\",\n    \"price\": \"<double>\",\n    \"room\": \"<string>\"\n   }\n  ]\n },\n {\n  \"id\": \"<long>\",\n  \"quarter\": \"<integer>\",\n  \"year\": \"<integer>\",\n  \"maxNumberOfParticipants\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"sessions\": [\n   {\n    \"id\": \"<long>\",\n    \"startDateTime\": \"<dateTime>\",\n    \"endDateTime\": \"<dateTime>\",\n    \"price\": \"<double>\",\n    \"room\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"startDateTime\": \"<dateTime>\",\n    \"endDateTime\": \"<dateTime>\",\n    \"price\": \"<double>\",\n    \"room\": \"<string>\"\n   }\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "get participants list for a given course",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bcfdcd7c-a579-4fb3-b4b0-45e6824b9f7d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"the participant is in the list\", function () {",
									"     pm.expect(pm.response.json()[0].id).to.equals(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/program/:programId/course/:courseId/participant",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"program",
								":programId",
								"course",
								":courseId",
								"participant"
							],
							"variable": [
								{
									"key": "programId",
									"value": "2",
									"description": "id of the program"
								},
								{
									"key": "courseId",
									"value": "2",
									"description": "id of the course"
								}
							]
						},
						"description": "normally in the \"course\" section"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/program/<integer>/course/<integer>/participant",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"program",
										"<integer>",
										"course",
										"<integer>",
										"participant"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<long>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"birthdate\": \"<date>\",\n  \"courses\": [\n   {\n    \"id\": \"<long>\",\n    \"quarter\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"maxNumberOfParticipants\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"sessions\": [\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     },\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     }\n    ]\n   },\n   {\n    \"id\": \"<long>\",\n    \"quarter\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"maxNumberOfParticipants\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"sessions\": [\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     },\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     }\n    ]\n   }\n  ]\n },\n {\n  \"id\": \"<long>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"birthdate\": \"<date>\",\n  \"courses\": [\n   {\n    \"id\": \"<long>\",\n    \"quarter\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"maxNumberOfParticipants\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"sessions\": [\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     },\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     }\n    ]\n   },\n   {\n    \"id\": \"<long>\",\n    \"quarter\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"maxNumberOfParticipants\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"sessions\": [\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     },\n     {\n      \"id\": \"<long>\",\n      \"startDateTime\": \"<dateTime>\",\n      \"endDateTime\": \"<dateTime>\",\n      \"price\": \"<double>\",\n      \"room\": \"<string>\"\n     }\n    ]\n   }\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "Delete an existing participant by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "647ba69f-707c-4907-9188-90689a2f1ea7",
								"exec": [
									"pm.test('Check status code', () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204])\r",
									"})\r",
									"\r",
									"pm.sendRequest(pm.variables.get(\"baseUrl\") + \"/participant\", function (err, res) {\r",
									"  if (err) { console.log(err); }    \r",
									"  pm.test('the participant is removed from the general list', function () {\r",
									"    pm.expect(res.json().length).to.equals(0);\r",
									"  });\r",
									"});\r",
									"\r",
									"pm.sendRequest(pm.variables.get(\"baseUrl\") + \"/program/2/course/2\", function (err, res) {\r",
									"  if (err) { console.log(err); }    \r",
									"  pm.test('the participant is removed from the course in which he is registered', function () {\r",
									"    pm.expect(res.json().participants.length).to.equals(0);\r",
									"  });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/participant/:participantId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"participant",
								":participantId"
							],
							"variable": [
								{
									"key": "participantId",
									"value": "1",
									"description": "id of the person that have to be deleted"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/participant/<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"participant",
										"<integer>"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "efe2b440-f926-45dd-9e87-6dd9b9018419",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "1aef6662-590f-4537-9679-68c04e81c022",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "3c3d75a3-ed87-4881-ae3f-13f4f251c3c6",
			"key": "baseUrl",
			"value": "http://localhost:8080/19p_projet1_war_exploded/koulutus/api",
			"type": "string"
		}
	]
}